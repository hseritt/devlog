# Generated by Django 3.2.17 on 2023-02-16 23:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import markdownx.models


class Migration(migrations.Migration):

    replaces = [('tasks', '0001_initial'), ('tasks', '0002_comment'), ('tasks', '0003_task_sprint'), ('tasks', '0004_alter_task_sprint'), ('tasks', '0005_task_blocked_by_tasks'), ('tasks', '0006_alter_task_type'), ('tasks', '0007_auto_20230129_1425'), ('tasks', '0005_alter_comment_options'), ('tasks', '0008_merge_20230129_1441'), ('tasks', '0009_alter_task_status'), ('tasks', '0010_alter_task_status'), ('tasks', '0011_auto_20230204_1301'), ('tasks', '0012_alter_task_assigned_to'), ('tasks', '0013_auto_20230205_1647'), ('tasks', '0014_alter_category_options'), ('tasks', '0015_alter_task_effort'), ('tasks', '0016_alter_task_type'), ('tasks', '0017_task_date_closed'), ('tasks', '0018_auto_20230214_2355')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0001_initial'),
        ('sprints', '0003_alter_sprint_status'),
        ('sprints', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, unique=True)),
                ('description', markdownx.models.MarkdownxField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('New', 'New'), ('Investigation', 'Investigation'), ('In Progress', 'In Progress'), ('Awaiting Review', 'Awaiting Review'), ('In Review', 'In Review'), ('Awaiting Deployment', 'Awaiting Deployment'), ('Closed', 'Closed'), ("Won't Fix", "Won't Fix")], default='New', max_length=30)),
                ('effort', models.IntegerField(blank=True, default=5, null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('type', models.CharField(choices=[('Bug', 'Bug'), ('Feature', 'Feature'), ('Enhancement', 'Enhancement'), ('Epic', 'Epic'), ('Spike', 'Spike'), ('Story', 'Story'), ('Task', 'Task')], default='Task', max_length=30)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sprints.sprint')),
                ('blocked_by_tasks', models.ManyToManyField(blank=True, related_name='_tasks_task_blocked_by_tasks_+', to='tasks.Task')),
                ('cloned_by_tasks', models.ManyToManyField(blank=True, related_name='_tasks_task_cloned_by_tasks_+', to='tasks.Task')),
                ('blocking_tasks', models.ManyToManyField(blank=True, related_name='_tasks_task_blocking_tasks_+', to='tasks.Task')),
                ('related_to_tasks', models.ManyToManyField(blank=True, related_name='_tasks_task_related_to_tasks_+', to='tasks.Task')),
                ('categories', models.ManyToManyField(blank=True, to='tasks.Category')),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', markdownx.models.MarkdownxField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
    ]
